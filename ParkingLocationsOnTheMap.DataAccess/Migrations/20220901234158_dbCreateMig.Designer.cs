// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingLocationsOnTheMap.DataAccess;

namespace ParkingLocationsOnTheMap.DataAccess.Migrations
{
    [DbContext(typeof(ParkingLocationsOnTheMapDbContext))]
    [Migration("20220901234158_dbCreateMig")]
    partial class dbCreateMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.IsparkData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CAPACITY_OF_PARK")
                        .HasColumnType("int");

                    b.Property<string>("COUNTY_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_TYPE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORKING_TIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("IsparkData");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.NewIsparkData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CAPACITY_OF_PARK")
                        .HasColumnType("int");

                    b.Property<string>("COUNTY_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_TYPE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORKING_TIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("NewIsparkData");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SURNAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("USER_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.UserAccess", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<DateTime>("TIME_OVER")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAccess");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.UserAccess", b =>
                {
                    b.HasOne("ParkingLocationsOnTheMap.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
