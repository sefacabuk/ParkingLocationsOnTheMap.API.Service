// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingLocationsOnTheMap.DataAccess;

namespace ParkingLocationsOnTheMap.DataAccess.Migrations
{
    [DbContext(typeof(ParkingLocationsOnTheMapDbContext))]
    [Migration("20220904205644_initialCreateMig")]
    partial class initialCreateMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.ISPARK_DATA", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CAPACITY_OF_PARK")
                        .HasColumnType("int");

                    b.Property<string>("COUNTY_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_TYPE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORKING_TIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_id");

                    b.ToTable("IsparkData");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.NEW_ISPARK_DATA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CAPACITY_OF_PARK")
                        .HasColumnType("int");

                    b.Property<string>("COUNTY_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARK_TYPE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORKING_TIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NewIsparkData");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.USER", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SURNAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("USER_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.USER_ACCESS", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<DateTime>("TIME_OVER")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("USERID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("USERID");

                    b.ToTable("UserAccess");
                });

            modelBuilder.Entity("ParkingLocationsOnTheMap.Entities.USER_ACCESS", b =>
                {
                    b.HasOne("ParkingLocationsOnTheMap.Entities.USER", "USER")
                        .WithMany()
                        .HasForeignKey("USERID");

                    b.Navigation("USER");
                });
#pragma warning restore 612, 618
        }
    }
}
